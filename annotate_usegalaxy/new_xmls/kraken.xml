<tool id="kraken" name="Kraken" version="1.2.1">
  <!--This tool descriptor has been annotated by ToolDog v0.3.1-->
  <description>
        assign taxonomic labels to sequencing reads
    </description>
  <edam_operations>
    <edam_operation>operation_3460</edam_operation>
  </edam_operations>
  <edam_topics>
    <edam_topic>topic_0091</edam_topic>
  </edam_topics>
  <stdio>
    <exit_code level="fatal" range="1:"/>
  </stdio>
  <version_command/>
  <command><![CDATA[
        
        @SET_DATABASE_PATH@ &&
        kraken --threads \${GALAXY_SLOTS:-1} @INPUT_DATABASE@ 
        
        ${only_classified_output}

        #if str( $quick_operation.quick ) == "yes":
            --quick
            --min-hits ${quick_operation.min_hits}

        #end if

        #if $single_paired.single_paired_selector == "yes":
            #if $forward_input.is_of_type( 'fastq' ):
                --fastq-input
            #else:
                --fasta-input
            #end if
            "$forward_input" "$reverse_input"
            ${single_paired.check_names}
        #elif $single_paired.single_paired_selector == "collection":
            #if $single_paired.input_pair.forward.is_of_type( 'fastq' ):
                --fastq-input
            #else:
                --fasta-input
            #end if
            "${single_paired.input_pair.forward}" "${single_paired.input_pair.reverse}"
            ${single_paired.check_names}
        #else:
            #if $input_sequences.is_of_type( 'fastq' ):
                --fastq-input
            #else:
                --fasta-input
            #end if
            "$input_sequences"
        #end if

        #if $split_reads:
            --classified-out "${classified_out}" --unclassified-out "${unclassified_out}"
        #end if

        ## The --output option was changed to redirect as it does not work properly is some situations. For example, on test database the tool classifies 4 reads but does not write them into a file if --output is specified. It does however print correct output into STDOUT. This behavior can be re-created with test database provided in test-data/test_db/ folder. This is the reason for incrementing version number from 1.1.2 to 1.1.3

        > "${output}"
        ##kraken-translate --db ${kraken_database.fields.name} "${output}" > "${translated}"
        
    ]]></command>
  <inputs>
    <conditional argument="single_paired" label="Author did not provide help for this parameter... " name="single_paired">
      <param argument="single_paired_selector" help="--paired" label="Single or paired reads" name="single_paired_selector" type="select">
        <option value="collection">Collection</option>
        <option value="yes">Paired</option>
        <option selected="true" value="no">Single</option>
      </param>
      <when value="collection">
        <param argument="check_names" checked="False" falsevalue="--paired" help="--check-names" label="Verify read names match" name="check_names" truevalue="--paired --check-names" type="boolean"/>
      </when>
      <when value="yes">
        <param argument="forward_input" format="fasta,fastq" help="FASTA or FASTQ dataset" label="Forward strand" name="forward_input" type="data"/>
        <param argument="reverse_input" format="fasta,fastq" help="FASTA or FASTQ dataset" label="Reverse strand" name="reverse_input" type="data"/>
        <param argument="check_names" checked="False" falsevalue="--paired" help="--check-names" label="Verify read names match" name="check_names" truevalue="--paired --check-names" type="boolean"/>
      </when>
      <when value="no">
        <param argument="input_sequences" format="fasta,fastq" help="FASTA or FASTQ datasets" label="Input sequences" name="input_sequences" type="data"/>
      </when>
    </conditional>
    <param argument="split_reads" checked="false" help="Sets --unclassified-out and --classified-out" label="Output classified and unclassified reads?" name="split_reads" type="boolean" truevalue="split_reads" falsevalue=""/>
    <conditional argument="quick_operation" label="Author did not provide help for this parameter... " name="quick_operation">
      <param argument="quick" help="--quick; Rather than searching all k-mers in a sequence, stop classification after a specified number of database hit" label="Enable quick operation?" name="quick" type="select">
        <option value="yes">Yes</option>
        <option selected="true" value="no">No</option>
      </param>
      <when value="yes">
        <param argument="min_hits" help="--min-hits; min-hits will allow you to require multiple hits before declaring a sequence classified, which can be especially useful with custom databases when testing to see if sequences either do or do not belong to a particular genome; default=1" label="Number of hits required for classification" name="min_hits" type="integer" value="1"/>
      </when>
      <when value="no"/>
    </conditional>
    <param argument="only_classified_output" checked="False" falsevalue="" help="--only-classified-output" label="Print no Kraken output for unclassified sequences" name="only_classified_output" truevalue="--only-classified-output" type="boolean"/>
  </inputs>
  <outputs>
    <data format_source="input_sequences" hidden="false" label="${tool.name} on ${on_string}: Classified reads" name="classified_out">
      <filter>(split_reads)</filter>
    </data>
    <data format_source="input_sequences" hidden="false" label="${tool.name} on ${on_string}: Unclassified reads" name="unclassified_out">
      <filter>(split_reads)</filter>
    </data>
    <data format="tabular" hidden="false" label="${tool.name} on ${on_string}: Classification" name="output"/>
  </outputs>
  <tests>
    <test>
      <param name="single_paired_selector" value="no"/>
      <param ftype="fasta" name="input_sequences" value="kraken_test1.fa"/>
      <param name="split_reads" value="false"/>
      <param name="quick" value="no"/>
      <param name="only-classified-output" value="false"/>
      <param name="kraken_database" value="test_db"/>
      <output file="kraken_test1_output.tab" ftype="tabular" name="output"/>
    </test>
  </tests>
  <help><![CDATA[
        
**What it does**

Kraken is a taxonomic sequence classifier that assigns taxonomic labels to short DNA reads. It does this by examining the k-mers within a read and querying a database with those k-mers. This database contains a mapping of every k-mer in Kraken's genomic library to the lowest common ancestor (LCA) in a taxonomic tree of all genomes that contain that k-mer. The set of LCA taxa that correspond to the k-mers in a read are then analyzed to create a single taxonomic label for the read; this label can be any of the nodes in the taxonomic tree. Kraken is designed to be rapid, sensitive, and highly precise.

-----

**Kraken options**

The Galaxy version of Kraken implements the following options::

        
  --fasta-input             Input is FASTA format
  --fastq-input             Input is FASTQ format
  --quick                   Quick operation (use first hit or hits)
  --min-hits NUM            In quick op., number of hits req'd for classification
                            NOTE: this is ignored if --quick is not specified
  --unclassified-out        Print unclassified sequences to filename
  --classified-out          Print classified sequences to filename

  --only-classified-output  Print no Kraken output for unclassified sequences
                          
------

**Output Format**

Each sequence classified by Kraken results in a single line of output. Output lines contain five tab-delimited fields; from left to right, they are::

    1. "C"/"U": one letter code indicating that the sequence was either classified or unclassified.
    2. The sequence ID, obtained from the FASTA/FASTQ header.
    3. The taxonomy ID Kraken used to label the sequence; this is 0 if the sequence is unclassified.
    4. The length of the sequence in bp.
    5. A space-delimited list indicating the LCA mapping of each k-mer in the sequence. For example, "562:13 561:4 A:31 0:1 562:3" would indicate that:
            a) the first 13 k-mers mapped to taxonomy ID #562
            b) the next 4 k-mers mapped to taxonomy ID #561
            c) the next 31 k-mers contained an ambiguous nucleotide
            d) the next k-mer was not in the database
            e) the last 3 k-mers mapped to taxonomy ID #562
        
    ]]></help>
  <citations>
    <citation type="doi">10.1186/gb-2014-15-3-r46</citation>
  </citations>
</tool>
