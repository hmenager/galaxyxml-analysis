<tool id="bedtools_mergebed" name="MergeBED" version="@WRAPPER_VERSION@.0">
  <!--This tool descriptor has been annotated by ToolDog v0.3.0-->
  <description>combine overlapping/nearby intervals into a single interval</description>
  <edam_operations>
    <edam_operation>operation_2429</edam_operation>
  </edam_operations>
  <edam_topics>
    <edam_topic>topic_0622</edam_topic>
  </edam_topics>
  <stdio>
    <exit_code level="fatal" range="1:"/>
  </stdio>
  <version_command/>
  <command><![CDATA[

        mergeBed
            -i "${input}"
            $strand
            -d $distance
            $header
            @C_AND_O_ARGUMENT@
            > "${output}"

    ]]></command>
  <inputs>
    <param argument="input" format="bam,bed,gff,vcf" label="Sort the following BAM/BED/VCF/GFF file" name="input" type="data"/>
    <param argument="strand" label="Calculation based on strandedness?" name="strand" type="select">
      <option selected="true" value="">Overlaps on either strand</option>
      <option value="-s">Force strandedness. That is, only merge features that are the same strand.</option>
      <option value="-S +">Force merge for forward strand only.</option>
      <option value="-S -">Force merge for reverse strand only.</option>
    </param>
    <param argument="distance" help="That is, overlapping and/or book-ended features are merged. (-d)" label="Maximum distance between features allowed for features to be merged" name="distance" type="integer" value="0"/>
  </inputs>
  <outputs>
    <data format="bed" hidden="false" label="Merged ${input.name}" metadata_source="input" name="output"/>
  </outputs>
  <tests>
    <test>
      <param ftype="bed" name="input" value="mergedBed1.bed"/>
      <output file="mergedBed_result1.bed" ftype="bed" name="output"/>
    </test>
    <test>
      <param ftype="bed" name="input" value="mergedBed2.bed"/>
      <param name="strandedness" value="-s"/>
      <output file="mergedBed_result2.bed" ftype="bed" name="output"/>
    </test>
    <test>
      <param ftype="bed" name="input" value="mergedBed3.bed"/>
      <param name="report_number" value="-n"/>
      <output file="mergedBed_result3.bed" ftype="bed" name="output"/>
    </test>
    <test>
      <param ftype="bed" name="input" value="mergedBed4.bed"/>
      <param name="distance" value="1000"/>
      <output file="mergedBed_result4.bed" ftype="bed" name="output"/>
    </test>
    <test>
      <param ftype="bed" name="input" value="mergedBed4.bed"/>
      <param name="distance" value="1000"/>
      <output file="mergedBed_result5.bed" ftype="bed" name="output"/>
    </test>
  </tests>
  <help><![CDATA[

**What it does**

bedtools merge combines overlapping or "book-ended" features in an interval file into a single feature which spans all of the combined features.


.. image:: $PATH_TO_IMAGES/merge-glyph.png


.. class:: warningmark

bedtools merge requires that you presort your data by chromosome and then by start position.


==========================================================================
Default behavior
==========================================================================
By default, ``bedtools merge`` combines overlapping (by at least 1 bp) and/or
bookended intervals into a single, "flattened" or "merged" interval.

::

  $ cat A.bed
  chr1  100  200
  chr1  180  250
  chr1  250  500
  chr1  501  1000

  $ bedtools merge -i A.bed
  chr1  100  500
  chr1  501  1000


==========================================================================
*-s* Enforcing "strandedness"
==========================================================================
The ``-s`` option will only merge intervals that are overlapping/bookended
*and* are on the same strand.

::

  $ cat A.bed
  chr1  100  200   a1  1 +
  chr1  180  250   a2  2 +
  chr1  250  500   a3  3 -
  chr1  501  1000  a4  4 +

  $ bedtools merge -i A.bed -s
  chr1  100  250    +
  chr1  501  1000   +
  chr1  250  500    -


==========================================================================
*-d* Controlling how close two features must be in order to merge
==========================================================================
By default, only overlapping or book-ended features are combined into a new
feature. However, one can force ``merge`` to combine more distant features
with the ``-d`` option. For example, were one to set ``-d`` to 1000, any
features that overlap or are within 1000 base pairs of one another will be
combined.

::

  $ cat A.bed
  chr1  100  200
  chr1  501  1000

  $ bedtools merge -i A.bed
  chr1  100  200
  chr1  501  1000

  $ bedtools merge -i A.bed -d 1000
  chr1  100  200  1000


@REFERENCES@

    ]]></help>
  <citations>
    <citation type="doi">10.1093/bioinformatics/btq033</citation>
  </citations>
</tool>
