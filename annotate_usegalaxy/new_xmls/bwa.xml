<tool id="bwa" name="Map with BWA" version="@VERSION@.2">
  <!--This tool descriptor has been annotated by ToolDog v0.3.1-->
  <description>- map short reads (&lt; 100 bp) against reference genome</description>
  <edam_operations>
    <edam_operation>operation_3198</edam_operation>
  </edam_operations>
  <edam_topics>
    <edam_topic>topic_0102</edam_topic>
  </edam_topics>
  <stdio>
    <exit_code level="fatal" range="1:"/>
  </stdio>
  <version_command/>
  <command><![CDATA[

    @set_reference_fasta_filename@

    ## setup vars for rg handling...
    @define_read_group_helpers@
    #if str( $input_type.input_type_selector ) == "paired":
      #set $rg_auto_name = $read_group_name_default($input_type.fastq_input1, $input_type.fastq_input2)
    #elif str( $input_type.input_type_selector ) in ["single_bam", "paired_bam"]:
      #set $rg_auto_name = $read_group_name_default($input_type.bam_input)
    #else
      #set $rg_auto_name = $read_group_name_default($input_type.fastq_input1)
    #end if
    @set_use_rg_var@
    @set_read_group_vars@

    ## Begin bwa command line

####### Fastq paired

    #if str( $input_type.input_type_selector ) == "paired" or str( $input_type.input_type_selector ) == "paired_collection":
      bwa aln
      -t "\${GALAXY_SLOTS:-1}"

      @command_options@

      "${reference_fasta_filename}"

      #if str( $input_type.input_type_selector ) == "paired_collection":
        "${input_type.fastq_input1.forward}"
      #else
        "${input_type.fastq_input1}"
      #end if

      > first.sai &&

      bwa aln
      -t "\${GALAXY_SLOTS:-1}"

      @command_options@

      "${reference_fasta_filename}"

      #if str( $input_type.input_type_selector ) == "paired_collection":
        "${input_type.fastq_input1.reverse}"
      #else
        "${input_type.fastq_input2}"
      #end if

      > second.sai &&

      bwa sampe

      #if str( $input_type.adv_pe_options.adv_pe_options_selector) == "True":
        -a ${$input_type.adv_pe_options.a}
        -o ${$input_type.adv_pe_options.o}
        -n ${$input_type.adv_pe_options.n}
        -N ${$input_type.adv_pe_options.N}
      #end if

      @read_group_options@

      #if str( $input_type.input_type_selector ) == "paired_collection":
        "${reference_fasta_filename}" first.sai second.sai "${input_type.fastq_input1.forward}" "${input_type.fastq_input1.reverse}"
      #else:
        "${reference_fasta_filename}" first.sai second.sai "${input_type.fastq_input1}" "${input_type.fastq_input2}"
      #end if

####### Fastq single

    #elif str( $input_type.input_type_selector ) == "single":
      bwa aln
      -t "\${GALAXY_SLOTS:-1}"

      @command_options@

      "${reference_fasta_filename}"
      "${input_type.fastq_input1}"
      > first.sai &&

      bwa samse

      #if str( $input_type.adv_se_options.adv_se_options_selector) == "True":
        -n ${$input_type.adv_se_options.n}
      #end if

      @read_group_options@

      "${reference_fasta_filename}" first.sai "${input_type.fastq_input1}"

####### BAM paired

    #elif str( $input_type.input_type_selector ) == "paired_bam":
      bwa aln
      -t "\${GALAXY_SLOTS:-1}"
      -b
      -1

      @command_options@

      "${reference_fasta_filename}"
      "${input_type.bam_input}"
      > first.sai &&

      bwa aln
      -t "\${GALAXY_SLOTS:-1}"
      -b
      -2
      @command_options@
      "${reference_fasta_filename}"
      "${input_type.bam_input}"
      > second.sai &&

      bwa sampe

      #if str( $input_type.adv_bam_pe_options.adv_pe_options_selector) == "True":
        -a ${$input_type.adv_bam_pe_options.a}
        -o ${$input_type.adv_bam_pe_options.o}
        -n ${$input_type.adv_bam_pe_options.n}
        -N ${$input_type.adv_bam_pe_options.N}
      #end if

      @read_group_options@

      "${reference_fasta_filename}" first.sai second.sai "${input_type.bam_input}" "${input_type.bam_input}"

####### Fastq single   ------------ to do next

    #elif str( $input_type.input_type_selector ) == "single_bam":
      bwa aln
      -t "\${GALAXY_SLOTS:-1}"
      -b
      -0

      @command_options@

      "${reference_fasta_filename}"
      "${input_type.bam_input}"
      > first.sai &&

      bwa samse

      #if str( $input_type.adv_bam_se_options.adv_se_options_selector) == "True":
        -n ${$input_type.adv_bam_se_options.n}
      #end if

      @read_group_options@

      "${reference_fasta_filename}" first.sai "${input_type.bam_input}"
    #end if

    | samtools sort -O bam -o '$bam_output'

  ]]></command>
  <inputs>
    <conditional argument="input_type" label="Author did not provide help for this parameter... " name="input_type">
      <param argument="input_type_selector" help="Select between fastq and bam datasets and between paired and single end data" label="Select input type" name="input_type_selector" type="select">
        <option value="paired">Paired fastq</option>
        <option value="paired_collection">Paired fastq collection</option>
        <option value="single">Single fastq</option>
        <option value="paired_bam">Paired BAM</option>
        <option value="single_bam">Single BAM</option>
      </param>
      <when value="paired">
        <param argument="fastq_input1" format="fastqsanger,fastqsanger.gz,fasta" help="Specify dataset with forward reads" label="Select first set of reads" name="fastq_input1" type="data"/>
        <param argument="fastq_input2" format="fastqsanger,fastqsanger.gz,fasta" help="Specify dataset with reverse reads" label="Select second set of reads" name="fastq_input2" type="data"/>
        <conditional argument="adv_pe_options" label="Author did not provide help for this parameter... " name="adv_pe_options"/>
      </when>
      <when value="paired_collection">
        <conditional argument="adv_pe_options" label="Author did not provide help for this parameter... " name="adv_pe_options"/>
      </when>
      <when value="single">
        <param argument="fastq_input1" format="fastqsanger,fastqsanger.gz,fasta" help="Specify dataset with single reads" label="Select fastq dataset" name="fastq_input1" type="data"/>
        <conditional argument="adv_se_options" label="Author did not provide help for this parameter... " name="adv_se_options"/>
      </when>
      <when value="paired_bam">
        <param argument="bam_input" format="bam" help="Specify BAM dataset with paired reads" label="Select BAM dataset" name="bam_input" type="data"/>
        <conditional argument="adv_bam_pe_options" label="Author did not provide help for this parameter... " name="adv_bam_pe_options"/>
      </when>
      <when value="single_bam">
        <param argument="bam_input" format="bam" help="Specify BAM dataset with single reads" label="Select BAM dataset" name="bam_input" type="data"/>
        <conditional argument="adv_bam_se_options" label="Author did not provide help for this parameter... " name="adv_bam_se_options"/>
      </when>
    </conditional>
    <conditional argument="analysis_type" label="Author did not provide help for this parameter... " name="analysis_type">
      <param argument="analysis_type_selector" label="Select analysis mode" name="analysis_type_selector" type="select">
        <option value="illumina">1.Simple Illumina mode</option>
        <option value="full">2.Full list of options</option>
      </param>
      <when value="illumina"/>
      <when value="full">
        <param area="false" argument="n" help="aln -n; default=0.04" label="maximum edit distance if the value is integer, or the fraction of missing alignments given 2% uniform base error rate if float. In the latter case, the maximum edit distance is automatically chosen for different read lengths." name="n" type="text" value="0.04"/>
        <param argument="o" help="aln -o; default=1" label="maximum number or gap openings" name="o" type="integer" value="1"/>
        <param argument="e" help="aln -e; -1 disables long gaps and invokes k-difference mode; default=-1" label="maximum number of gap extensions" name="e" type="integer" value="-1"/>
        <param argument="i" help="aln -i; default=5" label="do not put an indel within this many bp towards the ends" name="i" type="integer" value="5"/>
        <param argument="d" help="aln -d; default=10" label="maximum occurrences for extending a long deletion" name="d" type="integer" value="10"/>
        <param argument="l" help="aln -l; default=32" label="seed length" name="l" type="integer" value="32"/>
        <param argument="k" help="aln -k; default=2" label="maximum differences in the seed" name="k" type="integer" value="2"/>
        <param argument="m" help="aln -m; default=2000000" label="maximum entries in the queue" name="m" type="integer" value="2000000"/>
        <param argument="M" help="aln -M; default=3" label="mismatch penalty" name="M" type="integer" value="3"/>
        <param argument="O" help="aln -O; default=11" label="gap open penalty" name="O" type="integer" value="11"/>
        <param argument="E" help="aln -E; default=4" label="gap extension penalty" name="E" type="integer" value="4"/>
        <param argument="R" help="aln -R; default=30" label="stop searching when there are more than this value of equally best hits" name="R" type="integer" value="30"/>
        <param argument="q" help="aln -q; default=0" label="quality threshold for read trimming down to 35bp" name="q" type="integer" value="0"/>
        <param argument="B" help="aln -B; optional parameter" label="length of barcode" name="B" optional="True" type="integer"/>
        <param argument="L" help="aln -L; optional parameter" label="log-scaled gap penalty for long deletions" name="L" optional="True" type="float"/>
      </when>
    </conditional>
  </inputs>
  <outputs>
    <data format="bam" hidden="false" label="${tool.name} on ${on_string} (mapped reads in BAM format)" name="bam_output"/>
  </outputs>
  <tests>
    <test>
      <param name="reference_source_selector" value="history"/>
      <param ftype="fasta" name="ref_file" value="bwa-mem-mt-genome.fa"/>
      <param name="input_type_selector" value="single"/>
      <param ftype="fasta" name="fastq_input1" value="bwa-mem-fasta1.fa"/>
      <param name="analysis_type_selector" value="illumina"/>
      <output file="bwa-aln-test1-fasta.bam" ftype="bam" lines_diff="2" name="bam_output"/>
    </test>
    <test>
      <param name="reference_source_selector" value="history"/>
      <param ftype="fasta" name="ref_file" value="bwa-mem-mt-genome.fa"/>
      <param name="input_type_selector" value="paired"/>
      <param ftype="fastqsanger" name="fastq_input1" value="bwa-mem-fastq1.fq"/>
      <param ftype="fastqsanger" name="fastq_input2" value="bwa-mem-fastq2.fq"/>
      <param name="analysis_type_selector" value="illumina"/>
      <output file="bwa-aln-test1.bam" ftype="bam" lines_diff="2" name="bam_output"/>
    </test>
    <test>
      <param name="reference_source_selector" value="history"/>
      <param ftype="fasta" name="ref_file" value="bwa-mem-mt-genome.fa"/>
      <param name="input_type_selector" value="paired"/>
      <param ftype="fastqsanger.gz" name="fastq_input1" value="bwa-mem-fastq1.fq.gz"/>
      <param ftype="fastqsanger" name="fastq_input2" value="bwa-mem-fastq2.fq"/>
      <param name="analysis_type_selector" value="illumina"/>
      <output file="bwa-aln-test1.bam" ftype="bam" lines_diff="2" name="bam_output"/>
    </test>
    <test>
      <param name="reference_source_selector" value="history"/>
      <param ftype="fasta" name="ref_file" value="bwa-mem-mt-genome.fa"/>
      <param name="input_type_selector" value="paired_bam"/>
      <param ftype="bam" name="bam_input" value="bwa-aln-bam-input.bam"/>
      <param name="analysis_type_selector" value="illumina"/>
      <output file="bwa-aln-test2.bam" ftype="bam" lines_diff="2" name="bam_output"/>
    </test>
    <test>
      <param name="reference_source_selector" value="history"/>
      <param ftype="fasta" name="ref_file" value="bwa-mem-mt-genome.fa"/>
      <param name="input_type_selector" value="paired"/>
      <param ftype="fastqsanger" name="fastq_input1" value="bwa-mem-fastq1.fq"/>
      <param ftype="fastqsanger" name="fastq_input2" value="bwa-mem-fastq2.fq"/>
      <param name="rg_selector" value="set"/>
      <param name="ID" value="rg1"/>
      <param name="PL" value="CAPILLARY"/>
      <param name="analysis_type_selector" value="illumina"/>
      <output file="bwa-aln-test3.bam" ftype="bam" lines_diff="2" name="bam_output"/>
    </test>
  </tests>
  <help><![CDATA[
**What is does**

BWA is a software package for mapping low-divergent sequences against a large reference genome, such as the human genome. The bwa-aln algorithm is designed for Illumina sequence reads up to 100bp. For longer reads use BWA-MEM algorithm distributed as a separate Galaxy tool.

This Galaxy tool wraps bwa-aln, bwa-samse and -sampe modules of bwa read mapping tool:

  - **bwa aln** - actual mapper placing reads onto the reference sequence
  - **bwa samse** - post-processor converting suffix array coordinates into genome coordinates in SAM format for single reads
  - **bam sampe** - post-processor for paired reads

Galaxy implementation takes fastq or BAM (unaligned BAM) datasets as input and produces output in BAM (not SAM; in reality SAM produced by the bwa is converted to BAM on the fly by samtools view command) format, which can be further processed using various BAM utilities exiting in Galaxy (BAMTools, SAMTools, Picard).

-----

**Indices: Selecting reference genomes for BWA**

Galaxy wrapper for BWA allows you select between precomputed and user-defined indices for reference genomes using **Will you select a reference genome from your history or use a built-in index?** flag. This flag has two options:

  1. **Use a built-in genome index** - when selected (this is default), Galaxy provides the user with **Select reference genome index** dropdown. Genomes listed in this dropdown have been pre-indexed with bwa index utility and are ready to be mapped against.  
  2. **Use a genome from the history and build index** - when selected, Galaxy provides the user with **Select reference genome sequence** dropdown. This dropdown is populated by all FASTA formatted files listed in your current history. If your genome of interest is uploaded into history it will be shown there. Selecting a genome from this dropdown will cause Galaxy to first transparently index it using `bwa index` command, and then run mapping with `bwa aln`.
    
If your genome of interest is not listed here you have two choices:

  1. Contact galaxy team using **Help->Support** link at the top of the interface and let us know that an index needs to be added
  2. Upload your genome of interest as a FASTA file to Galaxy history and selected **Use a genome from the history and build index** option.

-----

**Galaxy-specific option**

Galaxy allows three levels of control over bwa-mem options provided by **Select analysis mode** menu option. These are:

  1. *Simple Illumina mode*: The simplest possible bwa mem application in which it alignes single or paired-end data to reference using default parameters. It is equivalent to the following command: bwa mem <reference index> <fastq dataset1> [fastq dataset2]
  2. *Full list of options*: Allows access to all options through Galaxy interface.

------

**bwa-aln options**

Each Galaxy parameter widget corresponds to command line flags listed below::

    -n NUM    max #diff (int) or missing prob under 0.02 err rate (float) [0.04]
    -o INT    maximum number or fraction of gap opens [1]
    -e INT    maximum number of gap extensions, -1 for disabling long gaps [-1]
    -i INT    do not put an indel within INT bp towards the ends [5]
    -d INT    maximum occurrences for extending a long deletion [10]
    -l INT    seed length [32]
    -k INT    maximum differences in the seed [2]
    -m INT    maximum entries in the queue [2000000]
    -M INT    mismatch penalty [3]
    -O INT    gap open penalty [11]
    -E INT    gap extension penalty [4]
    -R INT    stop searching when there are >INT equally best hits [30]
    -q INT    quality threshold for read trimming down to 35bp [0]
    -B INT    length of barcode
    -L        log-scaled gap penalty for long deletions
    -N        non-iterative mode: search for all n-difference hits (slooow)
    -I        the input is in the Illumina 1.3+ FASTQ-like format
    -b        the input read file is in the BAM format
    -0        use single-end reads only (effective with -b)
    -1        use the 1st read in a pair (effective with -b)
    -2        use the 2nd read in a pair (effective with -b)

**bwa-samse options**::

    -a INT    maximum insert size [500]
    -o INT    maximum occurrences for one end [100000]
    -n INT    maximum hits to output for paired reads [3]
    -N INT    maximum hits to output for discordant pairs [10]
    -c FLOAT  prior of chimeric rate (lower bound) [1.0e-05]
    -r STR    read group header line [null]

**bwa-sampe options**::

    -n INT    maximum hits to output for paired reads [3]
    -r STR    read group header line [null]

@dataset_collections@

@RG@

@info@
  ]]></help>
  <citations>
    <citation type="doi">10.1093/bioinformatics/btp324</citation>
    <citation type="doi">10.1093/bioinformatics/btp698</citation>
  </citations>
</tool>
