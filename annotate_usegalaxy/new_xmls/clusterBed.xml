<tool id="bedtools_clusterbed" name="ClusterBed" version="@WRAPPER_VERSION@.0">
  <!--This tool descriptor has been annotated by ToolDog v0.3.1-->
  <description>cluster overlapping/nearby intervals</description>
  <edam_operations>
    <edam_operation>operation_2429</edam_operation>
  </edam_operations>
  <edam_topics>
    <edam_topic>topic_0622</edam_topic>
  </edam_topics>
  <stdio>
    <exit_code level="fatal" range="1:"/>
  </stdio>
  <version_command/>
  <command><![CDATA[

        bedtools cluster
        $strand
        -d $distance
        -i '$inputA'
        > '$output'

    ]]></command>
  <inputs>
    <param argument="inputA" format="bed,vcf,gff,gff3" label="BED/VCF/GFF file" name="inputA" type="data"/>
    <param argument="strand" checked="false" falsevalue="" help="That is, only cluster features that are the same strand. By default, this is disabled." label="Force strandedness." name="strand" truevalue="-s" type="boolean"/>
    <param argument="distance" help="Default is 0. That is, overlapping and/or book-ended features are clustered." label="Maximum distance between features allowed for features to be clustered" name="distance" type="integer" value="0"/>
  </inputs>
  <outputs>
    <data format_source="inputA" hidden="false" metadata_source="inputA" name="output"/>
  </outputs>
  <tests>
    <test>
      <param ftype="bed" name="inputA" value="mergedBed1.bed"/>
      <output file="clusterBed_result.bed" ftype="bed" name="output"/>
    </test>
  </tests>
  <help><![CDATA[

**What it does**

Similar to merge, cluster report each set of overlapping or &#8220;book-ended&#8221; features in an interval file. In contrast to merge, cluster does not flatten the cluster of intervals into a new meta-interval; instead, it assigns an unique cluster ID to each record in each cluster. This is useful for having fine control over how sets of overlapping intervals in a single interval file are combined.

.. image:: $PATH_TO_IMAGES/cluster-glyph.png

.. class:: warningmark

bedtools cluster requires that you presort your data by chromosome and then by start position (e.g., sort -k1,1 -k2,2n in.bed > in.sorted.bed for BED files).

@REFERENCES@

    ]]></help>
  <citations>
    <citation type="doi">10.1093/bioinformatics/btq033</citation>
  </citations>
</tool>
