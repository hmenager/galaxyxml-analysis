<tool id="tophat2" name="TopHat" version="2.1.1">
  <!--This tool descriptor has been annotated by ToolDog v0.3.1-->
  <description>Gapped-read mapper for RNA-seq data</description>
  <edam_operations>
    <edam_operation>operation_0004</edam_operation>
  </edam_operations>
  <edam_topics>
    <edam_topic>topic_0003</edam_topic>
  </edam_topics>
  <requirements>
    <requirement type="package" version="2.2.8">bowtie2</requirement>
    <requirement type="package" version="2.1.1">tophat</requirement>
  </requirements>
  <stdio>
    <exit_code level="fatal" range="1:"/>
  </stdio>
  <version_command>tophat2 --version</version_command>
  <command><![CDATA[
        ##
        ## Set path to index, building the reference if necessary.
        ##

        #set index_path = ''
        #if $refGenomeSource.genomeSource == "history":
            bowtie2-build "$refGenomeSource.ownFile" genome ; ln -s "$refGenomeSource.ownFile" genome.fa ;
            #set index_path = 'genome'
        #else:
            #set index_path = $refGenomeSource.index.fields.path
        #end if

        ##
        ## Run tophat.
        ##

        tophat2

        ## Change this to accommodate the number of threads you have available.
        --num-threads \${GALAXY_SLOTS:-4}

        ## Set params.
        #if $params.settingsType == "full":
            --read-mismatches $params.read_mismatches
            #if str($params.bowtie_n) == "Yes":
                --bowtie-n
            #end if

            --read-edit-dist $params.read_edit_dist
            --read-realign-edit-dist $params.read_realign_edit_dist
            -a $params.anchor_length
            -m $params.splice_mismatches
            -i $params.min_intron_length
            -I $params.max_intron_length
            -g $params.max_multihits
            --min-segment-intron $params.min_segment_intron
            --max-segment-intron $params.max_segment_intron
            --segment-mismatches $params.seg_mismatches
            --segment-length $params.seg_length
            --library-type $params.library_type

            ## Indel search.
            #if $params.indel_search.allow_indel_search == "Yes":
                ## --allow-indels
                --max-insertion-length $params.indel_search.max_insertion_length
                --max-deletion-length $params.indel_search.max_deletion_length
            #else:
                --no-novel-indels
            #end if

            ## Supplying junctions parameters.
            #if $params.own_junctions.use_junctions == "Yes":
                #if $params.own_junctions.gene_model_ann.use_annotations == "indexed"
                    -G $params.own_junctions.gene_model_ann.gene_annotation_model.fields.path
                #elif $params.own_junctions.gene_model_ann.use_annotations == "history"
                    -G $params.own_junctions.gene_model_ann.gene_annotation_model
                #end if
                #if $params.own_junctions.raw_juncs.use_juncs == "Yes":
                    -j $params.own_junctions.raw_juncs.raw_juncs
                #end if
                #if str($params.own_junctions.no_novel_juncs) == "Yes":
                    --no-novel-juncs
                #end if
            #end if

            #if $params.coverage_search.use_search == "Yes":
                --coverage-search
                --min-coverage-intron $params.coverage_search.min_coverage_intron
                --max-coverage-intron $params.coverage_search.max_coverage_intron
            #elif $params.coverage_search.use_search == "No"
                --no-coverage-search
            #end if

            #if str($params.microexon_search) == "Yes":
                --microexon-search
            #end if

            #if $params.fusion_search.do_search == "Yes":
                --fusion-search
                --fusion-anchor-length $params.fusion_search.anchor_len
                --fusion-min-dist $params.fusion_search.min_dist
                --fusion-read-mismatches $params.fusion_search.read_mismatches
                --fusion-multireads $params.fusion_search.multireads
                --fusion-multipairs $params.fusion_search.multipairs
                --fusion-ignore-chromosomes "$params.fusion_search.ignore_chromosomes"
            #end if

            #if $params.bowtie2_settings.b2_settings == "Yes":
                #if $params.bowtie2_settings.preset.b2_preset == "Yes":
                    --b2-$params.bowtie2_settings.preset.b2_preset_select
                #end if
            #end if

        #end if

        ## Read group information.
        #if $readGroup.specReadGroup == "yes"
          --rg-id "$readGroup.rgid"
          --rg-library "$readGroup.rglb"
          --rg-platform "$readGroup.rgpl"
          --rg-sample "$readGroup.rgsm"
        #end if

        ## Set index path, inputs and parameters specific to paired data.
        #if $singlePaired.sPaired != "single"
            -r $singlePaired.mate_inner_distance
            --mate-std-dev=$singlePaired.mate_std_dev

            #if str($singlePaired.report_discordant_pairs) == "No":
                --no-discordant
            #end if

            #if $singlePaired.sPaired == "paired"
              ${index_path} "$singlePaired.input1" "$singlePaired.input2"
            #else
              ${index_path} "$singlePaired.input.forward" "$singlePaired.input.reverse"
            #end if
        #else
            ${index_path} "$singlePaired.input1"
        #end if
    ]]></command>
  <inputs>
    <conditional argument="singlePaired" label="Author did not provide help for this parameter... " name="singlePaired">
      <param argument="sPaired" label="Is this single-end or paired-end data?" name="sPaired" type="select">
        <option value="single">Single-end</option>
        <option value="paired">Paired-end (as individual datasets)</option>
        <option value="paired_collection">Paired-end (as collection)</option>
      </param>
      <when value="single">
        <param argument="input1" format="fastqsanger" help="Must have Sanger-scaled quality values with ASCII offset 33" label="RNA-Seq FASTQ file" name="input1" type="data"/>
      </when>
      <when value="paired">
        <param argument="input1" format="fastqsanger" help="Must have Sanger-scaled quality values with ASCII offset 33" label="RNA-Seq FASTQ file, forward reads" name="input1" type="data"/>
        <param argument="input2" format="fastqsanger" help="Must have Sanger-scaled quality values with ASCII offset 33" label="RNA-Seq FASTQ file, reverse reads" name="input2" type="data"/>
      </when>
      <when value="paired_collection"/>
    </conditional>
    <conditional argument="params" label="Author did not provide help for this parameter... " name="params">
      <param argument="settingsType" help="You can use the default settings or set custom values for any of Tophat's parameters." label="TopHat settings to use" name="settingsType" type="select">
        <option value="preSet">Use Defaults</option>
        <option value="full">Full parameter list</option>
      </param>
      <when value="preSet"/>
      <when value="full">
        <param argument="read_realign_edit_dist" help="--read-realign-edit-dist; Some of the reads spanning multiple exons may be mapped incorrectly as a contiguous alignment to the genome even though the correct alignment should be a spliced one - this can happen in the presence of processed pseudogenes that are rarely (if at all) transcribed or expressed. This option can direct TopHat to re-align reads for which the edit distance of an alignment obtained in a previous mapping step is above or equal to this option value. If you set this option to 0, TopHat will map every read in all the mapping steps (transcriptome if you provided gene annotations, genome, and finally splice variants detected by TopHat), reporting the best possible alignment found in any of these mapping steps. This may greatly increase the mapping accuracy at the expense of an increase in running time. The default value for this option is set such that TopHat will not try to realign reads already mapped in earlier steps." label="Max realign edit distance" name="read_realign_edit_dist" type="integer" value="1000"/>
        <param argument="read_edit_dist" help="--read-edit-dist; Final read alignments having more than these many edit distance are discarded." label="Max edit distance" name="read_edit_dist" type="integer" value="2"/>
        <param argument="library_type" help="--library-type; TopHat will treat the reads as strand specific. Every read alignment will have an XS attribute tag. Consider supplying library type options below to select the correct RNA-seq protocol." label="Library Type" name="library_type" type="select">
          <option value="fr-unstranded">FR Unstranded</option>
          <option value="fr-firststrand">FR First Strand</option>
          <option value="fr-secondstrand">FR Second Strand</option>
        </param>
        <param argument="read_mismatches" help="--read-mismatches; Final read alignments having more than these many mismatches are discarded." label="Final read mismatches" name="read_mismatches" type="integer" value="2"/>
        <param argument="bowtie_n" help="--bowtie-n; TopHat uses &quot;-v&quot; in Bowtie for initial read mapping (the default), but with this option, &quot;-n&quot; is used instead. Read segments are always mapped using &quot;-v&quot; option." label="Use bowtie -n mode" name="bowtie_n" type="select">
          <option selected="true" value="No">No</option>
          <option value="Yes">Yes</option>
        </param>
        <param argument="anchor_length" help="-a/--min-anchor-length; TopHat will report junctions spanned by reads with at least this many bases on each side of the junction. Note that individual spliced alignments may span a junction with fewer than this many bases on one side. However, every junction involved in spliced alignments is supported by at least one read with this many bases on each side. This must be at least 3 and the default is 8." label="Anchor length (at least 3)" name="anchor_length" type="integer" value="8"/>
        <param argument="splice_mismatches" help="-m/--splice-mismatches; The default is 0." label="Maximum number of mismatches that can appear in the anchor region of spliced alignment" name="splice_mismatches" type="integer" value="0"/>
        <param argument="min_intron_length" help="-i/--min-intron-length; TopHat will ignore donor/acceptor pairs closer than this many bases apart. The default is 70." label="The minimum intron length" name="min_intron_length" type="integer" value="70"/>
        <param argument="max_intron_length" help="-I/--max-intron-length; When searching for junctions ab initio, TopHat will ignore donor/acceptor pairs farther than this many bases apart, except when such a pair is supported by a split segment alignment of a long read. The default is 500000." label="The maximum intron length" name="max_intron_length" type="integer" value="500000"/>
        <param argument="max_multihits" help="-g/--max-multihits; Instructs TopHat to allow up to this many alignments to the reference for a given read, and choose the alignments based on their alignment scores if there are more than this number. The default is 20 for read mapping. Unless you use --report-secondary-alignments, TopHat will report the alignments with the best alignment score. If there are more alignments with the same score than this number, TopHat will randomly report only this many alignments. In case of using --report-secondary-alignments, TopHat will try to report alignments up to this option value, and TopHat may randomly output some of the alignments with the same score to meet this number." label="Maximum number of alignments to be allowed" name="max_multihits" type="integer" value="20"/>
        <param argument="min_segment_intron" help="--min-segment-intron; The minimum intron length that may be found during split-segment search. The default is 50." label="Minimum intron length that may be found during split-segment (default) search" name="min_segment_intron" type="integer" value="50"/>
        <param argument="max_segment_intron" help="--max-segment-intron; The maximum intron length that may be found during split-segment search. The default is 500000." label="Maximum intron length that may be found during split-segment (default) search" name="max_segment_intron" type="integer" value="500000"/>
        <param argument="seg_mismatches" help="--segment-mismatches;  Read segments are mapped independently, allowing up to this many mismatches in each segment alignment. The default is 2." label="Number of mismatches allowed in each segment alignment for reads mapped independently" max="3" min="0" name="seg_mismatches" type="integer" value="2"/>
        <param argument="seg_length" help="--segment-length; Each read is cut up into segments, each at least this long. These segments are mapped independently. The default is 25." label="Minimum length of read segments" name="seg_length" type="integer" value="25"/>
        <param argument="output_unmapped" checked="false" falsevalue="false" help="If checked, a BAM with the unmapped reads will be added to the history" label="Output unmapped reads" name="output_unmapped" truevalue="true" type="boolean"/>
        <conditional argument="coverage_search" label="Author did not provide help for this parameter... " name="coverage_search">
          <param argument="use_search" help="Select 'Auto' to let TopHat decide when to enable coverage search (e.g. disable it for reads 75bp or longer). Select 'Yes' to enforce maximum sensitivity and to specify minimum and maximum intron length" label="Use coverage-based search for junctions" name="use_search" type="select">
            <option selected="true" value="auto">Auto</option>
            <option value="No">No (--no-coverage-search)</option>
            <option value="Yes">Yes (--coverage-search)</option>
          </param>
          <when value="auto"/>
          <when value="Yes">
            <param argument="min_coverage_intron" help="--min-coverage-intron; The minimum intron length that may be found during coverage search. The default is 50." label="Minimum intron length that may be found during coverage search" name="min_coverage_intron" type="integer" value="50"/>
            <param argument="max_coverage_intron" help="--max-coverage-intron; The maximum intron length that may be found during coverage search. The default is 20000." label="Maximum intron length that may be found during coverage search" name="max_coverage_intron" type="integer" value="20000"/>
          </when>
          <when value="No"/>
        </conditional>
        <param argument="microexon_search" help="--microexon-search; With this option, the pipeline will attempt to find alignments incident to microexons. Works only for reads 50bp or longer." label="Use Microexon Search" name="microexon_search" type="select">
          <option value="No">No</option>
          <option value="Yes">Yes</option>
        </param>
        <conditional argument="fusion_search" label="Author did not provide help for this parameter... " name="fusion_search">
          <param argument="do_search" help="Reads can be aligned to potential fusion transcripts if the --fusion-search option is specified. The fusion alignments are reported in SAM format using custom fields XF and XP (see the output format) and some additional information about fusions will be reported (see fusions.out). Once mapping is done, you can run tophat-fusion-post to filter out fusion transcripts (see the TopHat-Fusion website for more details)." label="Do Fusion Search" name="do_search" type="select">
            <option selected="true" value="No">No</option>
            <option value="Yes">Yes</option>
          </param>
          <when value="No"/>
          <when value="Yes">
            <param argument="anchor_len" help="--fusion-anchor-length; A 'supporting' read must map to both sides of a fusion by at least this many bases. The default is 20." label="Anchor Length" name="anchor_len" type="integer" value="20"/>
            <param argument="min_dist" help="--fusion-min-dist; For intra-chromosomal fusions, TopHat-Fusion tries to find fusions separated by at least this distance. The default is 10000000." label="Minimum Distance" name="min_dist" type="integer" value="10000000"/>
            <param argument="read_mismatches" help="--fusion-read-mismatches; Reads support fusions if they map across fusion with at most this many mismatches. The default is 2." label="Read Mismatches" name="read_mismatches" type="integer" value="2"/>
            <param argument="multireads" help="--fusion-multireads; Reads that map to more than this many places will be ignored. It may be possible that a fusion is supported by reads (or pairs) that map to multiple places. The default is 2." label="Multireads" name="multireads" type="integer" value="2"/>
            <param argument="multipairs" help="--fusion-multipairs; Pairs that map to more than this many places will be ignored. The default is 2." label="Multipairs" name="multipairs" type="integer" value="2"/>
            <param area="false" argument="ignore_chromosomes" label="--fusion-ignore-chromosomes; Ignore some chromosomes such as chrM when detecting fusion break points" name="ignore_chromosomes" type="text" value=""/>
          </when>
        </conditional>
        <conditional argument="bowtie2_settings" label="Author did not provide help for this parameter... " name="bowtie2_settings">
          <param argument="b2_settings" label="Set Bowtie2 settings" name="b2_settings" type="select">
            <option selected="true" value="No">No</option>
            <option value="Yes">Yes</option>
          </param>
          <when value="No"/>
          <when value="Yes">
            <conditional argument="preset" label="Author did not provide help for this parameter... " name="preset">
              <param argument="b2_preset" label="Use Preset options" name="b2_preset" type="select">
                <option selected="true" value="Yes">Yes</option>
                <option value="No">No</option>
              </param>
              <when value="Yes">
                <param argument="b2_preset_select" label="Preset option" name="b2_preset_select" type="select">
                  <option value="very-fast">Very fast</option>
                  <option value="fast">Fast</option>
                  <option selected="true" value="sensitive">Sensitive</option>
                  <option value="very-sensitive">Very sensitive</option>
                </param>
              </when>
              <when value="No"/>
            </conditional>
          </when>
        </conditional>
      </when>
    </conditional>
    <conditional argument="readGroup" label="Author did not provide help for this parameter... " name="readGroup">
      <param argument="specReadGroup" label="Specify read group?" name="specReadGroup" type="select">
        <option value="yes">Yes</option>
        <option selected="true" value="no">No</option>
      </param>
      <when value="yes">
        <param area="false" argument="rgid" help="Required if RG specified. Read group IDs may be modi&#64257;ed when merging SAM &#64257;les in order to handle collisions." label="Read group identi&#64257;er (ID). Each @RG line must have a unique ID. The value of ID is used in the RG tags of alignment records. Must be unique among all read groups in header section." name="rgid" type="text"/>
        <param area="false" argument="rglb" help="Required if RG specified" label="Library name (LB)" name="rglb" type="text"/>
        <param area="false" argument="rgpl" help="Required if RG specified. Valid values : CAPILLARY, LS454, ILLUMINA, SOLID, HELICOS, IONTORRENT and PACBIO" label="Platform/technology used to produce the reads (PL)" name="rgpl" type="text"/>
        <param area="false" argument="rgsm" help="Required if RG specified. Use pool name where a pool is being sequenced" label="Sample (SM)" name="rgsm" type="text"/>
      </when>
      <when value="no"/>
    </conditional>
  </inputs>
  <outputs>
    <data format="txt" from_work_dir="tophat_out/align_summary.txt" hidden="false" label="${tool.name} on ${on_string}: align_summary" name="align_summary"/>
    <data format="tabular" from_work_dir="tophat_out/fusions.out" hidden="false" label="${tool.name} on ${on_string}: fusions" name="fusions">
      <filter>(params['settingsType'] == 'full' and params['fusion_search']['do_search'] == 'Yes')</filter>
    </data>
    <data format="bed" from_work_dir="tophat_out/insertions.bed" hidden="false" label="${tool.name} on ${on_string}: insertions" name="insertions"/>
    <data format="bed" from_work_dir="tophat_out/deletions.bed" hidden="false" label="${tool.name} on ${on_string}: deletions" name="deletions"/>
    <data format="bed" from_work_dir="tophat_out/junctions.bed" hidden="false" label="${tool.name} on ${on_string}: splice junctions" name="junctions"/>
    <data format="bam" from_work_dir="tophat_out/accepted_hits.bam" hidden="false" label="${tool.name} on ${on_string}: accepted_hits" name="accepted_hits"/>
    <data format="bam" from_work_dir="tophat_out/unmapped.bam" hidden="false" label="${tool.name} on ${on_string}: unmapped" name="unmapped">
      <filter>(params['settingsType'] == 'full' and params['output_unmapped'])</filter>
    </data>
  </outputs>
  <tests>
    <test>
      <param name="sPaired" value="single"/>
      <param ftype="fastqsanger" name="input1" value="tophat_in2.fastqsanger"/>
      <param name="genomeSource" value="indexed"/>
      <param name="index" value="tophat_test"/>
      <param name="settingsType" value="preSet"/>
      <param name="specReadGroup" value="no"/>
      <output file="tophat2_out1j.bed" name="junctions"/>
      <output compare="sim_size" file="tophat_out1h.bam" name="accepted_hits"/>
    </test>
    <test>
      <param name="sPaired" value="paired"/>
      <param ftype="fastqsanger" name="input1" value="tophat_in2.fastqsanger"/>
      <param ftype="fastqsanger" name="input2" value="tophat_in3.fastqsanger"/>
      <param name="genomeSource" value="history"/>
      <param ftype="fasta" name="ownFile" value="tophat_in1.fasta"/>
      <param name="mate_inner_distance" value="20"/>
      <param name="settingsType" value="preSet"/>
      <param name="specReadGroup" value="no"/>
      <output file="tophat2_out2j.bed" name="junctions"/>
      <output compare="sim_size" file="tophat_out2h.bam" name="accepted_hits"/>
    </test>
    <test>
      <param name="sPaired" value="paired_collection"/>
      <param name="input"/>
      <param name="genomeSource" value="history"/>
      <param ftype="fasta" name="ownFile" value="tophat_in1.fasta"/>
      <param name="mate_inner_distance" value="20"/>
      <param name="settingsType" value="preSet"/>
      <param name="specReadGroup" value="no"/>
      <output file="tophat2_out2j.bed" name="junctions"/>
      <output compare="sim_size" file="tophat_out2h.bam" name="accepted_hits"/>
    </test>
    <test>
      <param name="genomeSource" value="history"/>
      <param name="ownFile" value="tophat_in1.fasta"/>
      <output file="tophat_out3i.bed" name="insertions"/>
      <output file="tophat_out3d.bed" name="deletions"/>
      <output file="tophat2_out3j.bed" name="junctions"/>
      <output compare="sim_size" file="tophat_out3h.bam" name="accepted_hits"/>
    </test>
    <test>
      <param name="genomeSource" value="indexed"/>
      <param name="index" value="tophat_test"/>
      <output file="tophat2_out4j.bed" name="junctions"/>
      <output compare="sim_size" file="tophat_out4h.bam" name="accepted_hits"/>
    </test>
  </tests>
  <help><![CDATA[
**TopHat Overview**

TopHat_ is a fast splice junction mapper for RNA-Seq reads. It aligns RNA-Seq reads to mammalian-sized genomes using the ultra high-throughput short read aligner Bowtie(2), and then analyzes the mapping results to identify splice junctions between exons.

.. _TopHat: http://ccb.jhu.edu/software/tophat/

------

**Know what you are doing**

.. class:: warningmark

There is no such thing (yet) as an automated gearshift in splice junction identification. It is all like stick-shift driving in San Francisco. In other words, running this tool with default parameters will probably not give you meaningful results. A way to deal with this is to **understand** the parameters by carefully reading the `documentation`__ and experimenting. Fortunately, Galaxy makes experimenting easy.

.. __: http://ccb.jhu.edu/software/tophat/manual.shtml

------

**Input formats**

TopHat accepts files in Sanger FASTQ format. Use the FASTQ Groomer to prepare your files.

------

**Outputs**

TopHat produces two output files:

- junctions -- A UCSC BED_ track of junctions reported by TopHat. Each junction consists of two connected BED blocks, where each block is as long as the maximal overhang of any read spanning the junction. The score is the number of alignments spanning the junction.
- accepted_hits -- A list of read alignments in BAM_ format.

.. _BED: http://genome.ucsc.edu/FAQ/FAQformat.html#format1
.. _BAM: http://samtools.sourceforge.net/

Two other possible outputs, depending on the options you choose, are insertions and deletions, both of which are in BED format.

-------

**TopHat settings**

All of the options have a default value. You can change any of them. Some of the options in TopHat have been implemented here.

------

**TopHat parameter list**

This is a list of implemented TopHat options::

  -r                                This is the expected (mean) inner distance between mate pairs. For, example, for paired end runs with fragments
                                    selected at 300bp, where each end is 50bp, you should set -r to be 200. There is no default, and this parameter
                                    is required for paired end runs.
  --mate-std-dev INT                The standard deviation for the distribution on inner distances between mate pairs. The default is 20bp.
  -a/--min-anchor-length INT        The "anchor length". TopHat will report junctions spanned by reads with at least this many bases on each side of the junction. Note that individual spliced
                                    alignments may span a junction with fewer than this many bases on one side. However, every junction involved in spliced alignments is supported by at least one
                                    read with this many bases on each side. This must be at least 3 and the default is 8.
  -m/--splice-mismatches INT        The maximum number of mismatches that may appear in the "anchor" region of a spliced alignment. The default is 0.
  -i/--min-intron-length INT        The minimum intron length. TopHat will ignore donor/acceptor pairs closer than this many bases apart. The default is 70.
  -I/--max-intron-length INT        The maximum intron length. When searching for junctions ab initio, TopHat will ignore donor/acceptor pairs farther than this many bases apart, except when such a pair is supported by a split segment alignment of a long read. The default is 500000.
  -g/--max-multihits INT            Instructs TopHat to allow up to this many alignments to the reference for a given read, and suppresses all alignments for reads with more than this many
                                    alignments. The default is 40.
  -G/--GTF [GTF 2.2 file]           Supply TopHat with a list of gene model annotations. TopHat will use the exon records in this file to build a set of known splice junctions for each gene, and will attempt to align reads to these junctions even if they would not normally be covered by the initial mapping.
  -j/--raw-juncs [juncs file]       Supply TopHat with a list of raw junctions. Junctions are specified one per line, in a tab-delimited format. Records look like: [chrom] [left] [right] [+/-], left and right are zero-based coordinates, and specify the last character of the left sequenced to be spliced to the first character of the right sequence, inclusive.
  -no-novel-juncs                   Only look for junctions indicated in the supplied GFF file. (ignored without -G)
  --no-coverage-search              Disables the coverage based search for junctions.
  --coverage-search                 Enables the coverage based search for junctions. Use when coverage search is disabled by default (such as for reads 75bp or longer), for maximum sensitivity.
  --microexon-search                With this option, the pipeline will attempt to find alignments incident to microexons. Works only for reads 50bp or longer.
  --segment-mismatches              Read segments are mapped independently, allowing up to this many mismatches in each segment alignment. The default is 2.
  --segment-length                  Each read is cut up into segments, each at least this long. These segments are mapped independently. The default is 25.
  --min-coverage-intron             The minimum intron length that may be found during coverage search. The default is 50.
  --max-coverage-intron             The maximum intron length that may be found during coverage search. The default is 20000.
  --min-segment-intron              The minimum intron length that may be found during split-segment search. The default is 50.
  --max-segment-intron              The maximum intron length that may be found during split-segment search. The default is 500000.
    ]]></help>
  <citations>
    <citation type="doi">10.1186/gb-2013-14-4-r36</citation>
    <citation type="doi">10.1093/nar/gkw343</citation>
    <citation type="doi">10.7490/f1000research.1114334.1</citation>
  </citations>
</tool>
